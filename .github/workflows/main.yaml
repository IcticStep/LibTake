name: LibTake CI tests 🎮

on: push

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
#  testRunner:
#    name: Test in ${{ matrix.testMode }} ✨
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        projectPath:
#          - "HappyHarvest"
#        testMode:
#          - EditMode
##          - PlayMode
#    steps:
##      - name: Unity - Activate
##        uses: game-ci/unity-activate@v2.0.0
#      
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Create LFS file list
#        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
#
#      - name: Restore LFS cache
#        uses: actions/cache@v2
#        id: lfs-cache
#        with:
#          path: .git/lfs
#          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
#
#      - name: Git LFS Pull
#        run: |
#          git lfs pull
#          git add .
#          git reset --hard
#
#      - name: Restore Library cache
#        uses: actions/cache@v2
#        with:
#          path: Library
#          key: Library-test-project-${{ matrix.targetPlatform }}
#          restore-keys: |
#            Library-test-project-
#            Library-
#
#      - name: Run tests
#        uses: game-ci/unity-test-runner@v4
#        env:
#          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#        id: testRunner
#        with:
#          projectPath: ${{ matrix.projectPath }}
#          testMode: ${{ matrix.testMode }}
#          checkName: ${{ matrix.testMode }} test results
#          githubToken: ${{ secrets.GITHUB_TOKEN }}
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: Test results (${{ matrix.testMode }})
#          path: ${{ steps.testRunner.outputs.artifactsPath }}

  buildWindows:
#    needs: testRunner
    name: Build for Windows 🖥️
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - "LibraryOA"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-build-StandaloneWindows64
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v4
        with:
          projectPath: ${{ matrix.projectPath }}
          targetPlatform: StandaloneWindows64

      - uses: actions/upload-artifact@v2
        with:
          name: build-StandaloneWindows64
          path: build/StandaloneWindows64
