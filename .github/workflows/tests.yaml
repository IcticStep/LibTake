name: LibTake CI tests ðŸ¤¬
run-name: Debug android ðŸŽ® ${{ github.ref }} ${{ github.sha }}

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

env:
  UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  testRunner:
    permissions:
      contents: read
      actions: read
      checks: write
    name: Test in ${{ matrix.testMode }} âœ¨
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - "LibraryOA"
        testMode:
          - EditMode
#          - PlayMode
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache
      - uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests
        id: tests
        uses: game-ci/unity-test-runner@v4
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          checkName: ${{ matrix.testMode }} test results
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport'
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results
          path: ${{ steps.tests.outputs.artifactsPath }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}